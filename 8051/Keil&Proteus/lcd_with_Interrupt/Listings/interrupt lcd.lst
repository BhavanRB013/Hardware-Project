C51 COMPILER V9.60.7.0   INTERRUPT_LCD                                                     07/10/2024 10:33:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE INTERRUPT_LCD
OBJECT MODULE PLACED IN .\Objects\interrupt lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE interrupt&lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\interrupt lcd.lst) TABS(2) OBJECT(.\Objects\interrupt lcd.obj)

line level    source

   1          #include<reg51.h>
   2          
   3          void lcdcmd(unsigned char);
   4          void lcddata(unsigned char);
   5          void lcdstring(unsigned char*);
   6          void msdelay(unsigned int);
   7          
   8          sbit rs = P2^0;
   9          sbit rw = P2^1;
  10          sbit en = P2^2;
  11          
  12          sbit sw1 = P2^3;
  13          sbit sw2 = P2^4;
  14          
  15          sbit led1 = P1^0;
  16          sbit led2 = P1^1;
  17          
  18          unsigned int count,signal_led1,signal_led2;
  19          
  20          void timer0_isr(void) interrupt 1{
  21   1        count++;
  22   1        if(signal_led1==1 && count==845){
  23   2          led1=~led1;
  24   2          count=0;
  25   2        }
  26   1        else if(signal_led2==1 && count == 1690){
  27   2          led2=~led2;
  28   2          count=0;
  29   2        }
  30   1      }
  31          
  32          void main(void){
  33   1        
  34   1        sw1,sw2 = 1;
  35   1        led1, led2 = 0;
  36   1        
  37   1        lcdcmd(0x38);
  38   1        msdelay(5);
  39   1        lcdcmd(0x0C);
  40   1        msdelay(5);
  41   1        lcdcmd(0x80);
  42   1        msdelay(5);
  43   1        lcdcmd(0x01);
  44   1        msdelay(5);
  45   1        
  46   1        lcdstring("waiting for input...");
  47   1        
  48   1        TMOD = 0X01;
  49   1        TH0 = 0X00;
  50   1        TL0 = 0X00;
  51   1        EA = 1;
  52   1        ET0 = 1;
  53   1        
  54   1        if(sw1 == 0){
C51 COMPILER V9.60.7.0   INTERRUPT_LCD                                                     07/10/2024 10:33:04 PAGE 2   

  55   2          signal_led1 = 1;
  56   2          //led1 = 1;
  57   2          TR0 = 1;
  58   2          lcdcmd(0X01);
  59   2          msdelay(50);
  60   2          lcdcmd(0X80);
  61   2          msdelay(50);
  62   2          lcdstring("LED blinking for: ");
  63   2          lcdcmd(0XC0);
  64   2          lcdstring("60 seconds");    
  65   2          
  66   2        }
  67   1        if(sw2 == 0){
  68   2          signal_led2 = 1;
  69   2          //led2 = 1;
  70   2          TR0 = 1;
  71   2          lcdcmd(0X01);
  72   2          msdelay(50);
  73   2          lcdcmd(0X80);
  74   2          msdelay(50);
  75   2          lcdstring("LED blinking for: ");
  76   2          lcdcmd(0XC0);
  77   2          lcdstring("120 seconds");
  78   2          
  79   2        }
  80   1        
  81   1        
  82   1        
  83   1      }
  84          
  85          
  86          void lcdcmd(unsigned char cmd){
  87   1        P1 = cmd;
  88   1        rs = 0;
  89   1        rw = 0;
  90   1        en = 1;
  91   1        msdelay(1);
  92   1        en = 0;
  93   1      }
  94          
  95          
  96          void lcddata(unsigned char value){
  97   1        P1 = value;
  98   1        rs = 1;
  99   1        rw = 0;
 100   1        en = 1;
 101   1        msdelay(1);
 102   1        en = 0;
 103   1      }
 104          
 105          void lcdstring(unsigned char *str){
 106   1        while(*str){
 107   2          lcddata(*str++);
 108   2          msdelay(50);
 109   2        }
 110   1      }
 111          
 112          void msdelay(unsigned int itime){
 113   1        unsigned int i,j;
 114   1        for(i=0;i<itime;i++)
 115   1        for(j=0;j<1275;j++);
 116   1      }
C51 COMPILER V9.60.7.0   INTERRUPT_LCD                                                     07/10/2024 10:33:04 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    344    ----
   CONSTANT SIZE    =     63    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
